Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
                              uart.o (__udivmodsi4)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o (exit)
/usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                              uart.o (__do_clear_bss)

Discarded input sections

 .data          0x00000000        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
 .bss           0x00000000        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
 .text          0x00000000        0x0 example.o
 .data          0x00000000        0x0 example.o
 .bss           0x00000000        0x0 example.o
 .text          0x00000000        0x0 uart.o
 .data          0x00000000        0x0 uart.o
 .text          0x00000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
 .data          0x00000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
 .bss           0x00000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
 .text          0x00000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .data          0x00000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .bss           0x00000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 .text          0x00000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .data          0x00000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .bss           0x00000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
LOAD example.o
LOAD uart.o
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x2e2
 *(.vectors)
 .vectors       0x00000000       0xac /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x000000ac       0x16 example.o
                0x000000c2                . = ALIGN (0x2)
                0x000000c2                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000000c2        0x0 linker stubs
 *(.trampolines*)
                0x000000c2                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000000c2                __ctors_start = .
 *(.ctors)
                0x000000c2                __ctors_end = .
                0x000000c2                __dtors_start = .
 *(.dtors)
                0x000000c2                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000000c2        0x0 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
                0x000000c2                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000000c2        0xc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000ce       0x10 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                0x000000ce                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x000000de        0x4 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
 *(.init9)
 *(.text)
 .text          0x000000e2        0x2 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
                0x000000e2                __vector_38
                0x000000e2                __vector_22
                0x000000e2                __vector_28
                0x000000e2                __vector_1
                0x000000e2                __vector_32
                0x000000e2                __vector_34
                0x000000e2                __vector_24
                0x000000e2                __vector_12
                0x000000e2                __bad_interrupt
                0x000000e2                __vector_6
                0x000000e2                __vector_31
                0x000000e2                __vector_35
                0x000000e2                __vector_39
                0x000000e2                __vector_3
                0x000000e2                __vector_23
                0x000000e2                __vector_30
                0x000000e2                __vector_11
                0x000000e2                __vector_13
                0x000000e2                __vector_17
                0x000000e2                __vector_19
                0x000000e2                __vector_7
                0x000000e2                __vector_41
                0x000000e2                __vector_27
                0x000000e2                __vector_5
                0x000000e2                __vector_33
                0x000000e2                __vector_37
                0x000000e2                __vector_4
                0x000000e2                __vector_9
                0x000000e2                __vector_2
                0x000000e2                __vector_21
                0x000000e2                __vector_15
                0x000000e2                __vector_36
                0x000000e2                __vector_29
                0x000000e2                __vector_40
                0x000000e2                __vector_8
                0x000000e2                __vector_14
                0x000000e2                __vector_10
                0x000000e2                __vector_16
                0x000000e2                __vector_18
                0x000000e2                __vector_20
                0x000000e2                __vector_42
                0x000000e4                . = ALIGN (0x2)
 *(.text.*)
 .text.uart_print_P
                0x000000e4       0x1a example.o
                0x000000e4                uart_print_P
 .text.main     0x000000fe       0x3a example.o
                0x000000fe                main
 .text.uart_init
                0x00000138       0x56 uart.o
                0x00000138                uart_init
 .text.uart_putchar
                0x0000018e       0x2a uart.o
                0x0000018e                uart_putchar
 .text.uart_getchar
                0x000001b8       0x28 uart.o
                0x000001b8                uart_getchar
 .text.uart_available
                0x000001e0       0x16 uart.o
                0x000001e0                uart_available
 .text.__vector_26
                0x000001f6       0x56 uart.o
                0x000001f6                __vector_26
 .text.__vector_25
                0x0000024c       0x4e uart.o
                0x0000024c                __vector_25
 .text.libgcc   0x0000029a       0x44 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
                0x0000029a                __udivmodsi4
                0x000002de                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000002de        0x0 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                0x000002de                exit
                0x000002de                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000002de        0x4 /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x000002e2                _etext = .

.data           0x00800100        0x0 load address 0x000002e2
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100       0x6c
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100       0x6c uart.o
 *(.bss*)
 *(COMMON)
                0x0080016c                PROVIDE (__bss_end, .)
                0x000002e2                __data_load_start = LOADADDR (.data)
                0x000002e2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080016c        0x0
                0x0080016c                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080016c                PROVIDE (__noinit_end, .)
                0x0080016c                _end = .
                0x0080016c                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x6cc
 *(.stab)
 .stab          0x00000000      0x6cc /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o

.stabstr        0x00000000       0x54
 *(.stabstr)
 .stabstr       0x00000000       0x54 /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x70
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x28 example.o
 .debug_aranges
                0x00000028       0x48 uart.o

.debug_pubnames
                0x00000000       0xa1
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x2c example.o
 .debug_pubnames
                0x0000002c       0x75 uart.o

.debug_info     0x00000000      0x35d
 *(.debug_info)
 .debug_info    0x00000000      0x11d example.o
 .debug_info    0x0000011d      0x240 uart.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x189
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xad example.o
 .debug_abbrev  0x000000ad       0xdc uart.o

.debug_line     0x00000000      0x35b
 *(.debug_line)
 .debug_line    0x00000000      0x11f example.o
 .debug_line    0x0000011f      0x23c uart.o

.debug_frame    0x00000000       0xa0
 *(.debug_frame)
 .debug_frame   0x00000000       0x30 example.o
 .debug_frame   0x00000030       0x70 uart.o

.debug_str      0x00000000      0x15d
 *(.debug_str)
 .debug_str     0x00000000       0xad example.o
                                 0xe6 (size before relaxing)
 .debug_str     0x000000ad       0xb0 uart.o
                                0x161 (size before relaxing)

.debug_loc      0x00000000      0x1e0
 *(.debug_loc)
 .debug_loc     0x00000000       0xd7 example.o
 .debug_loc     0x000000d7      0x109 uart.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(example.elf elf32-avr)
LOAD linker stubs

.debug_pubtypes
                0x00000000       0x63
 .debug_pubtypes
                0x00000000       0x2b example.o
 .debug_pubtypes
                0x0000002b       0x38 uart.o

.debug_ranges   0x00000000       0x50
 .debug_ranges  0x00000000       0x18 example.o
 .debug_ranges  0x00000018       0x38 uart.o

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__bss_end                                         /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_clear_bss.o)
                                                  uart.o
__heap_end                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__init                                            /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__stack                                           /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__udivmodsi4                                      /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_udivmodsi4.o)
                                                  uart.o
__vector_1                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_10                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_11                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_12                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_13                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_14                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_15                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_16                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_17                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_18                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_19                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_2                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_20                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_21                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_22                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_23                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_24                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_25                                       uart.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_26                                       uart.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_27                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_28                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_29                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_3                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_30                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_31                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_32                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_33                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_34                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_35                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_36                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_37                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_38                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_39                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_4                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_40                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_41                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_42                                       /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_5                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_6                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_7                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_8                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_9                                        /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vector_default                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
__vectors                                         /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
_exit                                             /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
exit                                              /usr/lib/gcc/avr/4.5.3/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
main                                              example.o
                                                  /usr/lib/gcc/avr/4.5.3/../../../avr/lib/avr5/crtm32u4.o
uart_available                                    uart.o
                                                  example.o
uart_getchar                                      uart.o
                                                  example.o
uart_init                                         uart.o
                                                  example.o
uart_print_P                                      example.o
uart_putchar                                      uart.o
                                                  example.o
